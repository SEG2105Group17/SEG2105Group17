// Generated by view binder compiler. Do not edit!
package com.example.termproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.termproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCourseDbactivityBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAdd;

  @NonNull
  public final Button btnBack;

  @NonNull
  public final Button btnDelete;

  @NonNull
  public final Button btnFind;

  @NonNull
  public final EditText editDescription;

  @NonNull
  public final EditText editName;

  @NonNull
  public final ListView list;

  @NonNull
  public final TextView txt1;

  @NonNull
  public final TextView txtDescription;

  @NonNull
  public final TextView txtID;

  @NonNull
  public final TextView txtID2;

  @NonNull
  public final TextView txtName;

  private ActivityCourseDbactivityBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnAdd, @NonNull Button btnBack, @NonNull Button btnDelete,
      @NonNull Button btnFind, @NonNull EditText editDescription, @NonNull EditText editName,
      @NonNull ListView list, @NonNull TextView txt1, @NonNull TextView txtDescription,
      @NonNull TextView txtID, @NonNull TextView txtID2, @NonNull TextView txtName) {
    this.rootView = rootView;
    this.btnAdd = btnAdd;
    this.btnBack = btnBack;
    this.btnDelete = btnDelete;
    this.btnFind = btnFind;
    this.editDescription = editDescription;
    this.editName = editName;
    this.list = list;
    this.txt1 = txt1;
    this.txtDescription = txtDescription;
    this.txtID = txtID;
    this.txtID2 = txtID2;
    this.txtName = txtName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCourseDbactivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCourseDbactivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_course_dbactivity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCourseDbactivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAdd;
      Button btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.btnBack;
      Button btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnDelete;
      Button btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnFind;
      Button btnFind = ViewBindings.findChildViewById(rootView, id);
      if (btnFind == null) {
        break missingId;
      }

      id = R.id.editDescription;
      EditText editDescription = ViewBindings.findChildViewById(rootView, id);
      if (editDescription == null) {
        break missingId;
      }

      id = R.id.editName;
      EditText editName = ViewBindings.findChildViewById(rootView, id);
      if (editName == null) {
        break missingId;
      }

      id = R.id.list;
      ListView list = ViewBindings.findChildViewById(rootView, id);
      if (list == null) {
        break missingId;
      }

      id = R.id.txt1;
      TextView txt1 = ViewBindings.findChildViewById(rootView, id);
      if (txt1 == null) {
        break missingId;
      }

      id = R.id.txtDescription;
      TextView txtDescription = ViewBindings.findChildViewById(rootView, id);
      if (txtDescription == null) {
        break missingId;
      }

      id = R.id.txtID;
      TextView txtID = ViewBindings.findChildViewById(rootView, id);
      if (txtID == null) {
        break missingId;
      }

      id = R.id.txtID2;
      TextView txtID2 = ViewBindings.findChildViewById(rootView, id);
      if (txtID2 == null) {
        break missingId;
      }

      id = R.id.txtName;
      TextView txtName = ViewBindings.findChildViewById(rootView, id);
      if (txtName == null) {
        break missingId;
      }

      return new ActivityCourseDbactivityBinding((ConstraintLayout) rootView, btnAdd, btnBack,
          btnDelete, btnFind, editDescription, editName, list, txt1, txtDescription, txtID, txtID2,
          txtName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
