// Generated by view binder compiler. Do not edit!
package com.example.termproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.termproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityInstructorLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button adminLoginBTN;

  @NonNull
  public final TextView adminPassword;

  @NonNull
  public final TextView adminTitle;

  @NonNull
  public final TextView adminUsername;

  @NonNull
  public final Button btnBack3;

  @NonNull
  public final EditText editPasswordA;

  @NonNull
  public final EditText editUsernameA;

  private ActivityInstructorLoginBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button adminLoginBTN, @NonNull TextView adminPassword, @NonNull TextView adminTitle,
      @NonNull TextView adminUsername, @NonNull Button btnBack3, @NonNull EditText editPasswordA,
      @NonNull EditText editUsernameA) {
    this.rootView = rootView;
    this.adminLoginBTN = adminLoginBTN;
    this.adminPassword = adminPassword;
    this.adminTitle = adminTitle;
    this.adminUsername = adminUsername;
    this.btnBack3 = btnBack3;
    this.editPasswordA = editPasswordA;
    this.editUsernameA = editUsernameA;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInstructorLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInstructorLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_instructor_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInstructorLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adminLoginBTN;
      Button adminLoginBTN = ViewBindings.findChildViewById(rootView, id);
      if (adminLoginBTN == null) {
        break missingId;
      }

      id = R.id.adminPassword;
      TextView adminPassword = ViewBindings.findChildViewById(rootView, id);
      if (adminPassword == null) {
        break missingId;
      }

      id = R.id.adminTitle;
      TextView adminTitle = ViewBindings.findChildViewById(rootView, id);
      if (adminTitle == null) {
        break missingId;
      }

      id = R.id.adminUsername;
      TextView adminUsername = ViewBindings.findChildViewById(rootView, id);
      if (adminUsername == null) {
        break missingId;
      }

      id = R.id.btnBack3;
      Button btnBack3 = ViewBindings.findChildViewById(rootView, id);
      if (btnBack3 == null) {
        break missingId;
      }

      id = R.id.editPasswordA;
      EditText editPasswordA = ViewBindings.findChildViewById(rootView, id);
      if (editPasswordA == null) {
        break missingId;
      }

      id = R.id.editUsernameA;
      EditText editUsernameA = ViewBindings.findChildViewById(rootView, id);
      if (editUsernameA == null) {
        break missingId;
      }

      return new ActivityInstructorLoginBinding((ConstraintLayout) rootView, adminLoginBTN,
          adminPassword, adminTitle, adminUsername, btnBack3, editPasswordA, editUsernameA);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
