// Generated by view binder compiler. Do not edit!
package com.example.termproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.termproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityInstructorPersonalCoursesBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnIAdd;

  @NonNull
  public final Button btnIBack;

  @NonNull
  public final Button btnIDelete;

  @NonNull
  public final Button btnIEdit;

  @NonNull
  public final EditText editICapacity;

  @NonNull
  public final EditText editIDate;

  @NonNull
  public final EditText editIDifficulty;

  @NonNull
  public final EditText editIName;

  @NonNull
  public final EditText editITime;

  @NonNull
  public final ListView listI;

  @NonNull
  public final TextView txtClassInfo;

  @NonNull
  public final TextView txtI1;

  @NonNull
  public final TextView txtI2;

  @NonNull
  public final TextView txtI3;

  @NonNull
  public final TextView txtI4;

  @NonNull
  public final TextView txtI5;

  @NonNull
  public final TextView txtI6;

  @NonNull
  public final TextView txtIID;

  private ActivityInstructorPersonalCoursesBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnIAdd, @NonNull Button btnIBack, @NonNull Button btnIDelete,
      @NonNull Button btnIEdit, @NonNull EditText editICapacity, @NonNull EditText editIDate,
      @NonNull EditText editIDifficulty, @NonNull EditText editIName, @NonNull EditText editITime,
      @NonNull ListView listI, @NonNull TextView txtClassInfo, @NonNull TextView txtI1,
      @NonNull TextView txtI2, @NonNull TextView txtI3, @NonNull TextView txtI4,
      @NonNull TextView txtI5, @NonNull TextView txtI6, @NonNull TextView txtIID) {
    this.rootView = rootView;
    this.btnIAdd = btnIAdd;
    this.btnIBack = btnIBack;
    this.btnIDelete = btnIDelete;
    this.btnIEdit = btnIEdit;
    this.editICapacity = editICapacity;
    this.editIDate = editIDate;
    this.editIDifficulty = editIDifficulty;
    this.editIName = editIName;
    this.editITime = editITime;
    this.listI = listI;
    this.txtClassInfo = txtClassInfo;
    this.txtI1 = txtI1;
    this.txtI2 = txtI2;
    this.txtI3 = txtI3;
    this.txtI4 = txtI4;
    this.txtI5 = txtI5;
    this.txtI6 = txtI6;
    this.txtIID = txtIID;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityInstructorPersonalCoursesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityInstructorPersonalCoursesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_instructor_personal_courses, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityInstructorPersonalCoursesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnIAdd;
      Button btnIAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnIAdd == null) {
        break missingId;
      }

      id = R.id.btnIBack;
      Button btnIBack = ViewBindings.findChildViewById(rootView, id);
      if (btnIBack == null) {
        break missingId;
      }

      id = R.id.btnIDelete;
      Button btnIDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnIDelete == null) {
        break missingId;
      }

      id = R.id.btnIEdit;
      Button btnIEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnIEdit == null) {
        break missingId;
      }

      id = R.id.editICapacity;
      EditText editICapacity = ViewBindings.findChildViewById(rootView, id);
      if (editICapacity == null) {
        break missingId;
      }

      id = R.id.editIDate;
      EditText editIDate = ViewBindings.findChildViewById(rootView, id);
      if (editIDate == null) {
        break missingId;
      }

      id = R.id.editIDifficulty;
      EditText editIDifficulty = ViewBindings.findChildViewById(rootView, id);
      if (editIDifficulty == null) {
        break missingId;
      }

      id = R.id.editIName;
      EditText editIName = ViewBindings.findChildViewById(rootView, id);
      if (editIName == null) {
        break missingId;
      }

      id = R.id.editITime;
      EditText editITime = ViewBindings.findChildViewById(rootView, id);
      if (editITime == null) {
        break missingId;
      }

      id = R.id.listI;
      ListView listI = ViewBindings.findChildViewById(rootView, id);
      if (listI == null) {
        break missingId;
      }

      id = R.id.txtClassInfo;
      TextView txtClassInfo = ViewBindings.findChildViewById(rootView, id);
      if (txtClassInfo == null) {
        break missingId;
      }

      id = R.id.txtI1;
      TextView txtI1 = ViewBindings.findChildViewById(rootView, id);
      if (txtI1 == null) {
        break missingId;
      }

      id = R.id.txtI2;
      TextView txtI2 = ViewBindings.findChildViewById(rootView, id);
      if (txtI2 == null) {
        break missingId;
      }

      id = R.id.txtI3;
      TextView txtI3 = ViewBindings.findChildViewById(rootView, id);
      if (txtI3 == null) {
        break missingId;
      }

      id = R.id.txtI4;
      TextView txtI4 = ViewBindings.findChildViewById(rootView, id);
      if (txtI4 == null) {
        break missingId;
      }

      id = R.id.txtI5;
      TextView txtI5 = ViewBindings.findChildViewById(rootView, id);
      if (txtI5 == null) {
        break missingId;
      }

      id = R.id.txtI6;
      TextView txtI6 = ViewBindings.findChildViewById(rootView, id);
      if (txtI6 == null) {
        break missingId;
      }

      id = R.id.txtIID;
      TextView txtIID = ViewBindings.findChildViewById(rootView, id);
      if (txtIID == null) {
        break missingId;
      }

      return new ActivityInstructorPersonalCoursesBinding((ConstraintLayout) rootView, btnIAdd,
          btnIBack, btnIDelete, btnIEdit, editICapacity, editIDate, editIDifficulty, editIName,
          editITime, listI, txtClassInfo, txtI1, txtI2, txtI3, txtI4, txtI5, txtI6, txtIID);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
